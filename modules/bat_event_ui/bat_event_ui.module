<?php

/**
 * @file
 * Manages events for Units and displaying dates on the jquery
 * FullCalendar plugin.
 */

define('BAT_EVENT_CALENDAR_ADMIN_STYLE', 1);
define('BAT_EVENT_CALENDAR_GENERIC_STYLE', 2);

use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;

/**
 * Callback for admin/bat/calendar/
 */
function bat_event_ui_calendar_page($unit_type, $event_type) {
  $ev_type = bat_event_type_load($event_type);

  // Check if current type support this event type.
  if ($type = bat_type_load($unit_type)) {
    $type_bundle = bat_type_bundle_load($type->bundle());

    if (is_array($type_bundle->default_event_value_field_ids)) {
      if (!(isset($type_bundle->default_event_value_field_ids[$event_type]) && !empty($type_bundle->default_event_value_field_ids[$event_type]))) {
        //throw new NotFoundHttpException();
      }
    }
    else {
      //throw new NotFoundHttpException();
    }
  }
  elseif ($unit_type != 'all') {
    //throw new NotFoundHttpException();
  }

  // Check if user has permission to view calendar data for this event type.
  if (\Drupal::currentUser()->hasPermission('view calendar data for any ' . $ev_type->id() . ' event')) {
    //throw new AccessDeniedHttpException();
  }

  // Pick what modal style to use
  $calendar_settings['modal_style'] = 'default';

  if ($type = bat_event_type_load($event_type)) {
    $event_granularity = $type->getEventGranularity();
  }
  else {
    $event_granularity = 'both';
  }

  // All Drupal JS settings inside the batCalendar object.
  $fc_user_settings = array(
    'batCalendar' => array(
      array(
        'unitType' => $unit_type,
        'eventType' => $event_type,
        'eventGranularity' =>  $event_granularity,
      ),
    ),
  );

  $calendar_settings['user_settings'] = $fc_user_settings;
  $calendar_settings['calendar_id'] = 'fullcalendar-scheduler';

  if ($ev_type->getFixedEventStates()) {
    $calendar_settings['class'] = array('fixed_event_states');
  }
  else {
    $calendar_settings['class'] = array('open_event_states');
  }

  $render_array = array(
    'event_type_form' => \Drupal::formBuilder()->getForm('Drupal\bat_event_ui\Form\BatEventUiEventTypeForm', $unit_type, $event_type),
    'bulk_update_form' => array(),
    'calendar' => array(
      '#theme' => 'bat_fullcalendar',
      '#calendar_settings' => $calendar_settings,
      '#attached' => array('library' => array('bat_event_ui/bat_event_ui')),
    ),
  );

  if ($ev_type->getFixedEventStates()) {
    $render_array['bulk_update_form'] = \Drupal::formBuilder()->getForm('Drupal\bat_event_ui\Form\BatEventUiBulkUpdateForm', $unit_type, $event_type);
  }

  return $render_array;
}
